/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Edited by:         Petros Emmanouilidis
*/

import React, { useRef, useState } from 'react'
import { useFrame } from '@react-three/fiber'
import { useGLTF, useCursor} from '@react-three/drei'
import { Selection, Select, EffectComposer, Outline } from '@react-three/postprocessing'

export function Armchair(props) {

  const { nodes, materials } = useGLTF('/petros-portfolio/armchair.glb')

  // Hook reference of armchair geometry
  const group = useRef();

  // Keep track of hovering to make cursor reactive
  // when hovering over armchair
  const [hovered, hover] = useState(false);
  useCursor(hovered)


  // Every frame update y rotation by delta. 
  // Makes the chair go brrrr
  useFrame((state, delta) => (group.current.rotation.y += delta))


  return (
    <Select enabled={hovered}>
      <group {...props} dispose={null}>
        <group ref={group} scale={[1, 1, 1]} rotation={[0, -Math.PI / 2 + (Math.PI / 5), 0]} onPointerOver={() => hover(true)} onPointerOut={() => hover(false)}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane.geometry}
            material={materials.ClothBaseSimple}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane_1.geometry}
            material={materials.ClothDarkerSimple}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane_2.geometry}
            material={materials.ArmchariWoodSimple}
          />
        </group>
      </group>
    </Select>
  )
}

useGLTF.preload('/petros-portfolio/armchair.glb')


